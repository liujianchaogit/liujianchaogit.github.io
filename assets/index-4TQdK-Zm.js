import{V as t}from"./index-DiGvuAxb.js";var a=(e=>(e[e.INACTIVE=0]="INACTIVE",e[e.ONLINE=1]="ONLINE",e[e.OFFLINE=2]="OFFLINE",e))(a||{});const i={getDevicePage:async e=>await t.get({url:"/iot/device/page",params:e}),getDevice:async e=>await t.get({url:"/iot/device/get?id="+e}),createDevice:async e=>await t.post({url:"/iot/device/create",data:e}),updateDevice:async e=>await t.put({url:"/iot/device/update",data:e}),updateDeviceGroup:async e=>await t.put({url:"/iot/device/update-group",data:e}),deleteDevice:async e=>await t.delete({url:"/iot/device/delete?id="+e}),deleteDeviceList:async e=>await t.delete({url:"/iot/device/delete-list",params:{ids:e.join(",")}}),exportDeviceExcel:async e=>await t.download({url:"/iot/device/export-excel",params:e}),getDeviceCount:async e=>await t.get({url:"/iot/device/count?productId="+e}),getSimpleDeviceList:async e=>await t.get({url:"/iot/device/simple-list?",params:{deviceType:e}}),importDeviceTemplate:async()=>await t.download({url:"/iot/device/get-import-template"}),upstreamDevice:async e=>await t.post({url:"/iot/device/upstream",data:e}),downstreamDevice:async e=>await t.post({url:"/iot/device/downstream",data:e}),getLatestDeviceProperties:async e=>await t.get({url:"/iot/device/property/latest",params:e}),getHistoryDevicePropertyPage:async e=>await t.get({url:"/iot/device/property/history-page",params:e}),getDeviceLogPage:async e=>await t.get({url:"/iot/device/log/page",params:e}),getMqttConnectionParams:async e=>await t.get({url:"/iot/device/mqtt-connection-params",params:{deviceId:e}})};export{i as D,a};
